[{"D:\\AuthenticationReact\\src\\index.js":"1","D:\\AuthenticationReact\\src\\App.js":"2","D:\\AuthenticationReact\\src\\pages\\HomePage.js":"3","D:\\AuthenticationReact\\src\\pages\\AuthPage.js":"4","D:\\AuthenticationReact\\src\\components\\Layout\\Layout.js":"5","D:\\AuthenticationReact\\src\\components\\Profile\\UserProfile.js":"6","D:\\AuthenticationReact\\src\\components\\Profile\\ProfileForm.js":"7","D:\\AuthenticationReact\\src\\components\\Layout\\MainNavigation.js":"8","D:\\AuthenticationReact\\src\\components\\StartingPage\\StartingPageContent.js":"9","D:\\AuthenticationReact\\src\\components\\Auth\\AuthForm.js":"10","D:\\AuthenticationReact\\src\\components\\ContextAPI\\IdToken.jsx":"11","D:\\AuthenticationReact\\src\\Axioos.js":"12","D:\\AuthenticationReact\\src\\pages\\FetchUse.jsx":"13","D:\\AuthenticationReact\\src\\pages\\ContextApi.jsx":"14","D:\\AuthenticationReact\\src\\pages\\AuthUse.jsx":"15"},{"size":448,"mtime":1636607722598,"results":"16","hashOfConfig":"17"},{"size":1386,"mtime":1636607953795,"results":"18","hashOfConfig":"17"},{"size":171,"mtime":1635475415162,"results":"19","hashOfConfig":"17"},{"size":311,"mtime":1635476349600,"results":"20","hashOfConfig":"17"},{"size":267,"mtime":1636357418306,"results":"21","hashOfConfig":"17"},{"size":282,"mtime":1636540779005,"results":"22","hashOfConfig":"17"},{"size":1572,"mtime":1635956949271,"results":"23","hashOfConfig":"17"},{"size":1023,"mtime":1635951871853,"results":"24","hashOfConfig":"17"},{"size":240,"mtime":1635475414774,"results":"25","hashOfConfig":"17"},{"size":2765,"mtime":1635671611500,"results":"26","hashOfConfig":"17"},{"size":344,"mtime":1635667039389,"results":"27","hashOfConfig":"17"},{"size":749,"mtime":1636458738746,"results":"28","hashOfConfig":"17"},{"size":1715,"mtime":1636540907088,"results":"29","hashOfConfig":"17"},{"size":331,"mtime":1636607730743,"results":"30","hashOfConfig":"17"},{"size":498,"mtime":1636608835567,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7n0ku6",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\AuthenticationReact\\src\\index.js",[],"D:\\AuthenticationReact\\src\\App.js",["67","68","69"],"D:\\AuthenticationReact\\src\\pages\\HomePage.js",[],["70","71"],"D:\\AuthenticationReact\\src\\pages\\AuthPage.js",["72","73"],"import AuthForm from '../components/Auth/AuthForm';\nimport { useHistory,useParams} from 'react-router-dom';\n\nconst AuthPage = () => {\n  // const history = useHistory();\n  // history.push('/');\n  // const {id} = useParams();\n  return <>\n  {/* <h2>{id}</h2> */}\n  <AuthForm />\n  </>;\n};\n\nexport default AuthPage;\n","D:\\AuthenticationReact\\src\\components\\Layout\\Layout.js",[],"D:\\AuthenticationReact\\src\\components\\Profile\\UserProfile.js",[],"D:\\AuthenticationReact\\src\\components\\Profile\\ProfileForm.js",["74"],"import { useRef ,useContext } from \"react\";\nimport classes from \"./ProfileForm.module.css\";\nimport { IdTokenn } from \"../ContextAPI/IdToken\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProfileForm = () => {\n\n  const history = useHistory();\n  const passwordRef = useRef();\n\n  const [idToken, setIdToken] = useContext(IdTokenn)\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n     let url = 'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyD9PMUJE_899hywkB9GyCiIviZFDhC7ueg'\n    fetch(url , {\n      method:'POST',\n      body: JSON.stringify({\n        idToken :idToken.id,\n        password: passwordRef.current.value,\n        returnSecureToken :true\n      }) ,\n      headers:{\n        'Content-Type':'application/json'\n      }\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            throw new Error(data.error.message);\n          });\n        }\n      })\n      .then((data) => {\n        console.log('passowrd changed' ,data);\n        history.replace('/auth')\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input ref={passwordRef} type=\"password\" id=\"new-password\" />\n      </div>\n      <div className={classes.action}>\n        <button type='submit'>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","D:\\AuthenticationReact\\src\\components\\Layout\\MainNavigation.js",[],"D:\\AuthenticationReact\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\AuthenticationReact\\src\\components\\Auth\\AuthForm.js",["75","76","77","78"],"import { useContext, useRef, useState } from \"react\";\nimport { Link, Switch, Route ,useHistory } from \"react-router-dom\";\nimport { IdTokenn } from \"../ContextAPI/IdToken.jsx\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const [idToken, setIdToken] = useContext(IdTokenn);\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  //  const val = 99;\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD9PMUJE_899hywkB9GyCiIviZFDhC7ueg\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD9PMUJE_899hywkB9GyCiIviZFDhC7ueg\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            throw new Error(data.error.message);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        setIdToken({ id: data.idToken, bool: true });\n        history.replace('/')\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <section className={classes.auth}>\n      {/* <Link to={`/auth/${val}`}>Click me</Link> */}\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input ref={emailRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input ref={passwordRef} type=\"password\" id=\"password\" required />\n        </div>\n        <div className={classes.actions}>\n          <button>\n            {!isLoading ? (isLogin ? \"Login\" : \"Create Account\") : \"Sending..\"}\n          </button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","D:\\AuthenticationReact\\src\\components\\ContextAPI\\IdToken.jsx",[],"D:\\AuthenticationReact\\src\\Axioos.js",[],"D:\\AuthenticationReact\\src\\pages\\FetchUse.jsx",["79","80","81"],"import { useEffect, useState } from \"react\";\r\n\r\nconst FetchUse = () => {\r\n\r\n\r\n\r\n  const [data, setData] = useState([{}]);\r\n\r\n  const getData = () => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((result) => result.json())\r\n      .then((data) => {\r\n        const obj = data.map((item) => {\r\n          return {\r\n            id: item.userId,\r\n            title: item.title,\r\n            body: item.body,\r\n            img: \"\",\r\n          };\r\n        });\r\n        console.log('before updating ',obj)\r\n        fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n             \r\n              const finalObj  = obj.map(items=>{\r\n                  data.filter(item=> {\r\n                      \r\n                    if(item.id==items.id )\r\n                    {\r\n                        items.img = item.url;\r\n                    }   \r\n                 \r\n                });\r\n                //  items.img = newObj.url;\r\n                 return items;\r\n              })\r\n\r\n              console.log('after updating',finalObj);\r\n          });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  // const getData= async()=>{\r\n  //      const firstUrl = 'https://jsonplaceholder.typicode.com/posts';\r\n  //      const response = await fetch(firstUrl);\r\n  //      const finalData  = await response.json();\r\n\r\n  // }\r\n  console.log(Array.isArray(data));\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"chainig\", data);\r\n  }, [data]);\r\n\r\n\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n      {data.map((item) => item.userId)}\r\n      <h4>Use of fetch</h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchUse;\r\n","D:\\AuthenticationReact\\src\\pages\\ContextApi.jsx",[],"D:\\AuthenticationReact\\src\\pages\\AuthUse.jsx",[],{"ruleId":"82","severity":1,"message":"83","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":20,"column":19,"nodeType":"84","messageId":"85","endLine":20,"endColumn":29},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"93","line":2,"column":21,"nodeType":"84","messageId":"85","endLine":2,"endColumn":30},{"ruleId":"82","severity":1,"message":"87","line":11,"column":19,"nodeType":"84","messageId":"85","endLine":11,"endColumn":29},{"ruleId":"82","severity":1,"message":"94","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"95","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":22},{"ruleId":"82","severity":1,"message":"96","line":2,"column":24,"nodeType":"84","messageId":"85","endLine":2,"endColumn":29},{"ruleId":"82","severity":1,"message":"97","line":8,"column":10,"nodeType":"84","messageId":"85","endLine":8,"endColumn":17},{"ruleId":"82","severity":1,"message":"98","line":7,"column":16,"nodeType":"84","messageId":"85","endLine":7,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":27,"column":35,"nodeType":"101","messageId":"102","endLine":27,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":29,"column":31,"nodeType":"105","messageId":"106","endLine":29,"endColumn":33},"no-unused-vars","'IdTokenProvider' is defined but never used.","Identifier","unusedVar","'AxiosUse' is defined but never used.","'setIdToken' is assigned a value but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'useHistory' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'idToken' is assigned a value but never used.","'setData' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]